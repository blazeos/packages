if [ -z "$2" ]; then
  echo "You need to specify the package name to uninstall."
  exit 1
fi

PACKAGE=$2
VERSION=$3

if [ -z "$VERSION" ]; then
  VERSION=$(readlink /Programs/$PACKAGE/current) || true
  if [ -z "$VERSION" ]; then
    echo "Please specify which version to uninstall."
    exit 1
  fi
fi

#delete any empty directories!

#strip all binaries

#check if specified version and package exists
#if version specified is the current one, unlink current
#the installer should autolink all the common directories, add a flag to disable!

find /Programs/$PACKAGE/$VERSION/bin -not -type d | \
while read path; do
  file="${path/\/Programs\/$PACKAGE\/$VERSION\/bin\//}" 
  unlink "/System/Index/Binaries/$file" &> /dev/null || true
done

find /Programs/$PACKAGE/$VERSION/sbin -not -type d | \
while read path; do
  file="${path/\/Programs\/$PACKAGE\/$VERSION\/sbin\//}" 
  unlink "/System/Index/Binaries/$file" &> /dev/null || true
done

find /Programs/$PACKAGE/$VERSION/include -not -type d | \
while read path; do
  file="${path/\/Programs\/$PACKAGE\/$VERSION\/include\//}"
  unlink "/System/Index/Includes/$file" &> /dev/null || true
done

find /Programs/$PACKAGE/$VERSION/lib -not -type d | \
while read path; do
  file="${path/\/Programs\/$PACKAGE\/$VERSION\/lib\//}"
  unlink "/System/Index/Libraries/$file" &> /dev/null || true
done

find /Programs/$PACKAGE/$VERSION/share -not -type d | \
while read path; do
  file="${path/\/Programs\/$PACKAGE\/$VERSION\/share\//}"
  unlink "/System/Index/Shared/$file" &> /dev/null || true
done

find /Programs/$PACKAGE/$VERSION/libexec -not -type d | \
while read path; do
  file="${path/\/Programs\/$PACKAGE\/$VERSION\/libexec\//}"
  unlink "/System/Index/Libraries/libexec/$file" &> /dev/null || true
done

echo "Done!"
